//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubscriptionService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/RebTel.WCF.Models")]
    public partial class User : object
    {
        
        private string EmailField;
        
        private string FirstnameField;
        
        private int IdField;
        
        private string LastnameField;
        
        private SubscriptionService.UserSubscription[] UserSubscriptionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname
        {
            get
            {
                return this.FirstnameField;
            }
            set
            {
                this.FirstnameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname
        {
            get
            {
                return this.LastnameField;
            }
            set
            {
                this.LastnameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SubscriptionService.UserSubscription[] UserSubscriptions
        {
            get
            {
                return this.UserSubscriptionsField;
            }
            set
            {
                this.UserSubscriptionsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSubscription", Namespace="http://schemas.datacontract.org/2004/07/RebTel.WCF.Models")]
    public partial class UserSubscription : object
    {
        
        private SubscriptionService.Subscription SubscriptionField;
        
        private string SubscriptionIdField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SubscriptionService.Subscription Subscription
        {
            get
            {
                return this.SubscriptionField;
            }
            set
            {
                this.SubscriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriptionId
        {
            get
            {
                return this.SubscriptionIdField;
            }
            set
            {
                this.SubscriptionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subscription", Namespace="http://schemas.datacontract.org/2004/07/RebTel.WCF.Models")]
    public partial class Subscription : object
    {
        
        private int CallMinutesField;
        
        private string IdField;
        
        private string NameField;
        
        private decimal PriceField;
        
        private decimal PriceWithVATField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallMinutes
        {
            get
            {
                return this.CallMinutesField;
            }
            set
            {
                this.CallMinutesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceWithVAT
        {
            get
            {
                return this.PriceWithVATField;
            }
            set
            {
                this.PriceWithVATField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SubscriptionService.ISubscriptionService")]
    public interface ISubscriptionService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetUsers", ReplyAction="http://tempuri.org/ISubscriptionService/GetUsersResponse")]
        System.Threading.Tasks.Task<SubscriptionService.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetUser", ReplyAction="http://tempuri.org/ISubscriptionService/GetUserResponse")]
        System.Threading.Tasks.Task<SubscriptionService.User> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/CreateUser", ReplyAction="http://tempuri.org/ISubscriptionService/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(SubscriptionService.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/AddSubscriptionToUser", ReplyAction="http://tempuri.org/ISubscriptionService/AddSubscriptionToUserResponse")]
        System.Threading.Tasks.Task<bool> AddSubscriptionToUserAsync(SubscriptionService.UserSubscription userSubscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/DeleteUser", ReplyAction="http://tempuri.org/ISubscriptionService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetSubscriptions", ReplyAction="http://tempuri.org/ISubscriptionService/GetSubscriptionsResponse")]
        System.Threading.Tasks.Task<SubscriptionService.Subscription[]> GetSubscriptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetSubscription", ReplyAction="http://tempuri.org/ISubscriptionService/GetSubscriptionResponse")]
        System.Threading.Tasks.Task<SubscriptionService.Subscription> GetSubscriptionAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/CreateSubscription", ReplyAction="http://tempuri.org/ISubscriptionService/CreateSubscriptionResponse")]
        System.Threading.Tasks.Task<bool> CreateSubscriptionAsync(SubscriptionService.Subscription newSubscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/DeleteSubscription", ReplyAction="http://tempuri.org/ISubscriptionService/DeleteSubscriptionResponse")]
        System.Threading.Tasks.Task<bool> DeleteSubscriptionAsync(string subscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/UpdateSubscription", ReplyAction="http://tempuri.org/ISubscriptionService/UpdateSubscriptionResponse")]
        System.Threading.Tasks.Task<bool> UpdateSubscriptionAsync(SubscriptionService.Subscription subscription);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface ISubscriptionServiceChannel : SubscriptionService.ISubscriptionService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class SubscriptionServiceClient : System.ServiceModel.ClientBase<SubscriptionService.ISubscriptionService>, SubscriptionService.ISubscriptionService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SubscriptionServiceClient() : 
                base(SubscriptionServiceClient.GetDefaultBinding(), SubscriptionServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ISubscriptionService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SubscriptionServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(SubscriptionServiceClient.GetBindingForEndpoint(endpointConfiguration), SubscriptionServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SubscriptionServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SubscriptionServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SubscriptionServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SubscriptionServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SubscriptionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<SubscriptionService.User[]> GetUsersAsync()
        {
            return base.Channel.GetUsersAsync();
        }
        
        public System.Threading.Tasks.Task<SubscriptionService.User> GetUserAsync(int id)
        {
            return base.Channel.GetUserAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(SubscriptionService.User newUser)
        {
            return base.Channel.CreateUserAsync(newUser);
        }
        
        public System.Threading.Tasks.Task<bool> AddSubscriptionToUserAsync(SubscriptionService.UserSubscription userSubscription)
        {
            return base.Channel.AddSubscriptionToUserAsync(userSubscription);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int userId)
        {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public System.Threading.Tasks.Task<SubscriptionService.Subscription[]> GetSubscriptionsAsync()
        {
            return base.Channel.GetSubscriptionsAsync();
        }
        
        public System.Threading.Tasks.Task<SubscriptionService.Subscription> GetSubscriptionAsync(string id)
        {
            return base.Channel.GetSubscriptionAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> CreateSubscriptionAsync(SubscriptionService.Subscription newSubscription)
        {
            return base.Channel.CreateSubscriptionAsync(newSubscription);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSubscriptionAsync(string subscriptionId)
        {
            return base.Channel.DeleteSubscriptionAsync(subscriptionId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSubscriptionAsync(SubscriptionService.Subscription subscription)
        {
            return base.Channel.UpdateSubscriptionAsync(subscription);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISubscriptionService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISubscriptionService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:49198/SubscriptionService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return SubscriptionServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISubscriptionService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return SubscriptionServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISubscriptionService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ISubscriptionService,
        }
    }
}
